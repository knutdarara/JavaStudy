Java에서 @ ( 어노테이션) 이란?
 JEE5(Java Platform, Enterprise Edition 5)부터 새롭게 추가된 문법 요소
사전적으로 '주석'이라는 의미, 자바코드에 주석처럼 달아 특수한 의미를 부여함. -> 컴파일 타임 또는 런타임에 해석 될  수 있다.
 

기존 웹 애플리케이션들의 문제점 
	기존의 자바 웹애플리케이션들은 선언적인 프로그래밍 방식을 사용 
	선언적 : 프로그램의 전체 및 각 레이어 별 구성과 설정값들을 외부의 XML설정파일에 명시하는방식
	장점: 유연성( 변경이 될 수 있는 데이터들을 최대한 코드가 아닌 외부 설정 파일에 분리 >> 변경요구사항이 들어왔을때 재컴파일 없이도 쉽게 변경사항을 적용가능)
	단점: 프로그램 작성을 위해 매번 많은 설정파일을 작성해야함. >> 규모가 커질수록 설정의양 증가, 이를 구조화할 방법이 필요.
		도메인 데이터 처리정보가 Model클래스, 서비스 클래스,XML설정파일이 분산되어있어, 이를 확인하기 위해 설정파일을 모두 뒤져야함.

어노테이션의 장점
	데이터에 대한 유효성 검사조건을 어노테이션을 사용하여 Model 클래스에 직접 명시함으로써 해당 데이터들에 대한 유효조건을 쉽게 파악 가능, 
	데이터의 유효성 검사 등을 쉽게 알 수 있고, 이와 관련한 코드가 깔끔해지게 됩니다.

어노테이션의 용도

1. 문서화  >>>  JavaDoc라는 문서화 도구 가 있어서  가장 비중이 낮은 사용법.
2. 컴파일러 체크
3. 코드 분석을 위한 용도  >>> 가장 비중이 큼

문법적으로 @ 기호가 붙은 심볼을 사용하며 패키지, 클래스,메소드 프로퍼티,변수에 명시 가능.

	 메타 데이터의 비중이 가장 크다 
		메타-테이터(Meta-Data) : 
		데이터를 위한 데이터를 의미하며, 풀어 이야기하면 한 데이터에 대한 설명을 의미하는 데이터. (자신의 정보를 담고 있는 데이터)
	메타 데이터가 어노테이션의 효용을 가장 실감하는 부분은  JEE 설정 과 유효성 검사 부분.

어노테이션의 분류 
 어노테이션은 메타데이터 저장을 위해 클래스처럼 멤버를 갖을 수있는데, 멤버의 개수에 따라 
Marker 어노테이션 : 멤버 변수가 없으며, 단순한 표식으로 사용됨. 컴파일러에게 어떤 의미를 전달한다.
Single-value 어노테이션 : 단일 변수만 갖는 어노테이션. 단일 변수 밖에 없기 떄문에 값만을 명시하여 데이터를 전달할 수 있다.
Full 어노테이션 : 멤버로 둘 이상의 변수를 갖는 어노테이션, 데이터를 (값=쌍)의 형태로 전달함.

빌트인( Built_in ) 어노테이션 : 자바SDK에서 지원하는 어노테이션
@Override	: 현재 메소드가 수퍼클래스의 메소드를 오버라이드한 메소드임을 컴파일러에게 명시함. 수퍼클래스에 해당하는 메소드가 없으면 컴파일러가 인지하고 에러를 발생시킴
@Deprecated	: 마커 어노테이션으로 차후 버전에서 지원되지 않을 수 있기에 더이상 사용되지 말아야할 메소드를 나타낸다.
@SupressWarning	: 경고를 제거하는 어노테이션. Object형을 엘리먼트로 하는 컬렉션을 사용하면 컴파일러 경고가 발생하는데 이 어노테이션 사용하여 프로그래머의 의도적인 Object형 사용임을 알려 경고를 제거.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
싱글턴 패턴(Singleton Pattern) : ,
	인스턴스가 오직 1개만 생성하며( 전역 변수를 사용하지 않고 객체를 하나만 생성 하도록 하며) ,
	생성된 객체를 어디에서든지 참조할 수 있도록 하는 패턴( getInstance 메서드를 통해 모든 클라이언트에게 동일한 인스턴스를 반환하는 작업을 수행)
		>>>인스턴스가 사용될 때 똑같은 인스턴스를 여러 개 만드는 것이 아니라, 기존에 생성했던 동일한 인스턴스를 사용

싱글턴 패턴 생성시 주의점 : 동시성(Concurrency) 문제를 고려해서 설계해야함. 
자바의 싱글턴 패턴(Sigleton Pattern in Java)은 private constructor를 가지고, static method 를 사용함.

------------------------------------------------------------------------------------------------------------------------------
mark down  :   일반 텍스트 기반의 경량 마크업 언어. 
반 텍스트로 서식이 있는 문서를 작성하는 데 사용되며, 일반 마크업 언어에 비해 문법이 쉽고 간단한 것이 특징이다. 
HTML과 리치 텍스트(RTF) 등 서식 문서로 쉽게 변환되기 때문에 
응용 소프트웨어와 함께 배포되는 README 파일이나 온라인 게시물 등에 많이 사용된다.

	장점 :	1. 간결하다.
		2. 별도의 도구없이 작성가능하다.
		3. 다양한 형태로 변환이 가능하다.
		3. 텍스트(Text)로 저장되기 때문에 용량이 적어 보관이 용이하다.
		4. 텍스트파일이기 때문에 버전관리시스템을 이용하여 변경이력을 관리할 수 있다.
		5. 지원하는 프로그램과 플랫폼이 다양하다.
		
	단점 : 	1. 표준이 없어 사용자마다 문법이 상이
		2. 표준이 없기 때문에 도구에 따라서 변환방식이나 생성물이 다르다.
		3. 모든 HTML 마크업을대신하지 못함.

파일 확장자가 .md로 된 파일은 마크다운 문법으로 작성된 파일.