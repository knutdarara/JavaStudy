자료구조.

배열 : 동일한 자료가 연속적으로 순차적으로 있는 구조 
변수로 선언시 각각 하나씩 선언을 해야하므로 비효율적 >>  배열은 동일한 자료형의 변수르 한꺼번에 순차적으로 관리 가능.

배열의 길이가 n 일때 이 배열이 가질 수 있는 인덱스는 0 ~ n-1
배열 몇개를 사용할 지 미리 선언한다. >> 고정된 길이 ( Fixed length ) 
배열의 중간에 자료가 비면 안된다. >>> 연속된 자료 

배열 선언하기
	자료형 [] 배열이름 = new 자료형[개수];
	int[] arr = new int[10];
	자료형 배열이름 []  = new 자료형[개수];
	int arr []  = new int[10];

배열의 초기화 
	배열은 선언과 동시에 초기화 할 수 있음
	배열을 초기화 할 때는 배열의 개수를 명시하지 않음
	
	초기화 값없이 선언한 경우 

배열 사용하기
	[] : 인덱스 혹은 첨자 연산자
	배열의 위치를 지정하여 자료를 가져온다.
	모든 배열의 순서는 0부터 시작함
	n 개 배열은 0 부터 n-1 위치 까지 자료가 존재 

배열의 길이와 유효한 요소 값 
	배열의 길이의 속성: length
	자료가 있는 요소만 출력하렴8ㅕㄴ 크기에 대한 저장을 따로 해야함
	
-----------------------------------------------------------------------------------
객체 배열 
ArrayList : 배열의 기능을 구현한 자바에서 제공하는 클래스 

객체 배열 만들기 
	참조 자료형을 선언하는 객체 배열
	배열만 생성 한 경우 요소는 null로 초기화 된다.
	각 요소를 new를 활용하여 생성하여 저장해야 함. 
 
배열 복사하기
	기존 배열과 같은 배열을 만들거나 배열이 꽉찬 경우 더 큰 배열을 만들고 기존 자료를 복사할 수 있다.
	
	System.arraycopy(src,srcPos,dest,destPos,length);
	src 복사할 배열 이름
	srcPos 복사할 배열의 첫 번째 위치
	dest 복사해서 붙여 넣을 대상 배열 이름
	destPos 복사해서 대상 배열에 붙여 넣기를 시작할 첫번째 위치
	length src에서 dest 로 자료를 복사할 요소 개수 

객체 배열 복사하기 
	얕은 복사 : 배열 요소의 주소만 복사되므로, 배열 요소가 변경되면 복사된 배열의 값도 변경됨.

	깊은 복사 : 서로 다른 인스턴스의 메모리를 요소로 가지게 됨.(인스턴스를 새로 생성해야함.)

	
향상된 for문 : 객체를 전부 출력할때 종종 사용

public class MoreFor {
    public static void main(String[]args){
        String[] strArr={"Java","Android","C"};
        for(int i=0;i< strArr.length;i++){
            System.out.println(strArr[i]);
        }

        for(String s:strArr){
            System.out.println(s);
        }

        int[] arr ={1,2,3,4,5};
        for(int num:arr){
            System.out.println(num);
        }
    }
}


-----------------------------------------------------
다차원 배열

2차원 이상의 배열
	지도, 게임,  등 평면이나 공간을ㅇ 구현할때 많이 사용됨
	이차원 배열의 선언과 구조
	

	자료형 	배열이름			행 개수 ,열 개수  >> 	행을 기준으로 잡고 열을 돌림
	int[][]	 arr 	=	new 	int[2][3];

==========================================================
ArrayList 클래스
ArrayList : 배열의 기능을 구현한 자바에서 제공하는 클래스 

기존 배열은 	1.길이를 정하여 선언 >> 사용중 부족한 경우 다른 배열로 복사하는 코드를 직접 구현해야함.
		2.중간의 요소가 삭제되거나 삽입되는 경우에도 나머지 요소에 대한 조정하는 코드를 구현해야함.

ArrayList 클래스는 자바에서 제공되는 객체 배열이 구현된 클래스 : 
	여러 메서드오 ㅏ속성 등 사용하여 객체 베열을 편리하게 관리. 
	가장 많이 사용하는 객체 배열 클래스

ArrayList<E> 배열이름 = new ArrayList<E>();
사용할 객체를 E 위치에 넣고 ArrayList 메서드를 활용하여 추가하거나 참조 할 수있음.
