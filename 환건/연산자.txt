연산자

항 : 연산에 사용되는 값
연산자 : 항을 이용하여 연산하는 기호

산술 연산자 : 사칙 연산에 사용되는 연산자
+ 더하기
- 빼기
* 곱하기
/ 나누어 몫
% 나머지

관계 연산자
이항 연산자 연산의 결과가 true, false 반환

> 왼쪽이 크면 참, 아니면 거짓
< 왼쪽이 작으면 참, 아니면 거짓
>= 왼쪽 항이 오른쪽보다 크거나 같으면 참, 아니면 거짓
<= 왼쪽 항이 오른쪽보다 작거나 같으면 참, 아님 거짓
== 두개의 항 값 같으면 참, 아님 거짓
!= 두개의 항 값 다르면 참, 아님 거짓

복합 대입 연산자

대입 연산자와 다른 연산자를 함께 사용함
프로그램에서 자주 사용

+=, -=, *=, /=, %= 대입

대입 연산자

변수에 값을 대입하는 연산자
연산의 결과를 변수에 대입
우선 수위가 가장 낮은 연산자
왼쪽 변수에 오른쪽 변수 값을 대입

증감 연산자
++와 --

논리 연산자
&& 두 항이 모두 참일 경우에만 결과가 참 그렇지 않으면 거짓
|| 두 항 중 하나의 항만 참이면 결과 값은 참 두항이 모두 거짓이면 거짓
! 단항 연산자로 참일 경우엔 거짓으로 바꾸고 거짓일 경우에 참으로 바뀜.

단락 회로 평가

논리 곱&&은 두 항이 모두 true 일 때만 결과가 ture
앞의 항이 거짓 이면 뒤 항 결과 평가 하지 않아도 거짓임
논리 합 ||은 두 항이 모두 false 일 때만 결과가 false
앞의 항이 true이면 뒤 항의 결과를 평과 하지 않아도 true

복합 대입 연산자

대입 연산자와 다른 연산자를 함께 사용함
프로그램에서 자주 사용하는 연산자

+= 두 항의 값을 더해서 왼쪽 항에 대입함
-= 왼쪽 항에서 오른쪽 항을 빼서 그 값을 왼쪽 항에 대입
*= 두 항의 값을 곱해서 왼쪽 항에 대입함
/= 왼쪽 항을 오른쪽 항으로 나누어 그 몫을 왼쪽 항에 대입
%= 왼쪽 항을 오른쪽 항으로 나누어 그 나머지를 왼쪽 항에 대입

<<= 비트를 왼쪽으로 이동하고 그 값을 왼쪽 항에 대입
>>= 비트를 오른쪽으로 이동하고 그 값을 왼쪽 항에 대입
>>>= 비트를 오른쪽으로 이동하고 그 값을 왼쪽 항에 대입 (왼쪽 비트값 0)
&= 두 항의 & 비트 연산 후 그 값을 왼쪽 항에 대입
|= 두 항의 | 비트 연산 후 그 값을 왼쪽 항에 대입
^= 두 항의 ^ 비트 연산 후 그 값을 왼쪽 항에 대입

삼항 연산자
조건 식의 결과가 true 인 경우와 false의 경우에 따라 다른 식이나 결과가 수행됨
제어문 중 조건문을 간단히 표현할 때 사용할 수 있음.

비트 연산자
~ 비트의 반전 (1의 보수)
& 비트 단위 and
| 비트 단위 or
^ 비트 단위 xor
비트 연산자는 정수에만 사용 가능
마스크 : 특정 비트들은 가리고 몇 개의 비트들의 값만 사용할 때
비트 켜기 : 특정 비트들만을 1로 설정해서 사용하고 싶을 때
비트 끄기 : 특정 비트들 만을 0으로 설정해서 사용하고 싶을 때

연산자 우선 순위
1 일차식 () [] 연산 방향 오른쪽
2 단항 ! ++ -- + - 연산 방향 왼쪽
3 산술 % /  연산 방향 오른쪽
4 산술 + - 연산 방향 오른쪽
5 비트 이동 << >> 연산 방향 오른쪽
6 관계 < > <= >= 연산 방향 오른쪽
7 관계 == != 연산 방향 오른쪽
8 비트 곱 & 연산 방향 오른쪽
9 비트 차 ^ 연산 방향 오른쪽
10 비트 합 | 연산 방향 오른쪽
11 논리 곱 && 연산 방향 오른쪽
12 논리 합 || 연산 방향 오른쪽 
13 조건 ? : 연산 방향 오른쪽
14 대입 = += -= *= %= /= 연산 방향 왼쪽